import { ElementRef, AfterContentInit, EventEmitter, TemplateRef, QueryList, ChangeDetectorRef, OnDestroy } from '@angular/core';
import { TreeNode } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class OrganizationChartNode implements OnDestroy {
    cd: ChangeDetectorRef;
    node: TreeNode;
    root: boolean;
    first: boolean;
    last: boolean;
    chart: OrganizationChart;
    subscription: Subscription;
    constructor(chart: any, cd: ChangeDetectorRef);
    get leaf(): boolean;
    get colspan(): number;
    onNodeClick(event: Event, node: TreeNode): void;
    toggleNode(event: Event, node: TreeNode): void;
    isSelected(): boolean;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OrganizationChartNode>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OrganizationChartNode, "[pOrganizationChartNode]", never, {
    "node": "node";
    "root": "root";
    "first": "first";
    "last": "last";
}, {}, never>;
}
export declare class OrganizationChart implements AfterContentInit {
    el: ElementRef;
    cd: ChangeDetectorRef;
    value: TreeNode[];
    style: any;
    styleClass: string;
    selectionMode: string;
    preserveSpace: boolean;
    get selection(): any;
    set selection(val: any);
    selectionChange: EventEmitter<any>;
    onNodeSelect: EventEmitter<any>;
    onNodeUnselect: EventEmitter<any>;
    onNodeExpand: EventEmitter<any>;
    onNodeCollapse: EventEmitter<any>;
    templates: QueryList<any>;
    templateMap: any;
    private selectionSource;
    _selection: any;
    initialized: boolean;
    selectionSource$: import("rxjs").Observable<any>;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    get root(): TreeNode;
    ngAfterContentInit(): void;
    getTemplateForNode(node: TreeNode): TemplateRef<any>;
    onNodeClick(event: Event, node: TreeNode): void;
    findIndexInSelection(node: TreeNode): number;
    isSelected(node: TreeNode): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OrganizationChart>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OrganizationChart, "p-organizationChart", never, {
    "preserveSpace": "preserveSpace";
    "selection": "selection";
    "value": "value";
    "style": "style";
    "styleClass": "styleClass";
    "selectionMode": "selectionMode";
}, {
    "selectionChange": "selectionChange";
    "onNodeSelect": "onNodeSelect";
    "onNodeUnselect": "onNodeUnselect";
    "onNodeExpand": "onNodeExpand";
    "onNodeCollapse": "onNodeCollapse";
}, ["templates"]>;
}
export declare class OrganizationChartModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<OrganizationChartModule, [typeof OrganizationChart, typeof OrganizationChartNode], [typeof ɵngcc1.CommonModule], [typeof OrganizationChart, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<OrganizationChartModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnYW5pemF0aW9uY2hhcnQuZC50cyIsInNvdXJjZXMiOlsib3JnYW5pemF0aW9uY2hhcnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFlQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYsIFF1ZXJ5TGlzdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJlZU5vZGUgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE9yZ2FuaXphdGlvbkNoYXJ0Tm9kZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIG5vZGU6IFRyZWVOb2RlO1xuICAgIHJvb3Q6IGJvb2xlYW47XG4gICAgZmlyc3Q6IGJvb2xlYW47XG4gICAgbGFzdDogYm9vbGVhbjtcbiAgICBjaGFydDogT3JnYW5pemF0aW9uQ2hhcnQ7XG4gICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoY2hhcnQ6IGFueSwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBnZXQgbGVhZigpOiBib29sZWFuO1xuICAgIGdldCBjb2xzcGFuKCk6IG51bWJlcjtcbiAgICBvbk5vZGVDbGljayhldmVudDogRXZlbnQsIG5vZGU6IFRyZWVOb2RlKTogdm9pZDtcbiAgICB0b2dnbGVOb2RlKGV2ZW50OiBFdmVudCwgbm9kZTogVHJlZU5vZGUpOiB2b2lkO1xuICAgIGlzU2VsZWN0ZWQoKTogYm9vbGVhbjtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3JnYW5pemF0aW9uQ2hhcnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgdmFsdWU6IFRyZWVOb2RlW107XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgc2VsZWN0aW9uTW9kZTogc3RyaW5nO1xuICAgIHByZXNlcnZlU3BhY2U6IGJvb2xlYW47XG4gICAgZ2V0IHNlbGVjdGlvbigpOiBhbnk7XG4gICAgc2V0IHNlbGVjdGlvbih2YWw6IGFueSk7XG4gICAgc2VsZWN0aW9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVTZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uTm9kZVVuc2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbk5vZGVFeHBhbmQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uTm9kZUNvbGxhcHNlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIHRlbXBsYXRlTWFwOiBhbnk7XG4gICAgcHJpdmF0ZSBzZWxlY3Rpb25Tb3VyY2U7XG4gICAgX3NlbGVjdGlvbjogYW55O1xuICAgIGluaXRpYWxpemVkOiBib29sZWFuO1xuICAgIHNlbGVjdGlvblNvdXJjZSQ6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGdldCByb290KCk6IFRyZWVOb2RlO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIGdldFRlbXBsYXRlRm9yTm9kZShub2RlOiBUcmVlTm9kZSk6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgb25Ob2RlQ2xpY2soZXZlbnQ6IEV2ZW50LCBub2RlOiBUcmVlTm9kZSk6IHZvaWQ7XG4gICAgZmluZEluZGV4SW5TZWxlY3Rpb24obm9kZTogVHJlZU5vZGUpOiBudW1iZXI7XG4gICAgaXNTZWxlY3RlZChub2RlOiBUcmVlTm9kZSk6IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPcmdhbml6YXRpb25DaGFydE1vZHVsZSB7XG59XG4iXX0=