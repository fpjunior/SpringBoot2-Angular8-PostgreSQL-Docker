import { ElementRef, AfterContentInit, TemplateRef, QueryList, NgZone, EventEmitter, ChangeDetectorRef, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/ripple';
export declare class Carousel implements AfterContentInit {
    el: ElementRef;
    zone: NgZone;
    cd: ChangeDetectorRef;
    get page(): number;
    set page(val: number);
    get numVisible(): number;
    set numVisible(val: number);
    get numScroll(): number;
    set numScroll(val: number);
    responsiveOptions: any[];
    orientation: string;
    verticalViewPortHeight: string;
    contentClass: String;
    indicatorsContentClass: String;
    get value(): any[];
    set value(val: any[]);
    circular: boolean;
    autoplayInterval: number;
    style: any;
    styleClass: string;
    onPage: EventEmitter<any>;
    itemsContainer: ElementRef;
    headerFacet: any;
    footerFacet: any;
    templates: QueryList<any>;
    _numVisible: number;
    _numScroll: number;
    _oldNumScroll: number;
    prevState: any;
    defaultNumScroll: number;
    defaultNumVisible: number;
    _page: number;
    _value: any[];
    carouselStyle: any;
    id: string;
    totalShiftedItems: any;
    isRemainingItemsAdded: boolean;
    animationTimeout: any;
    translateTimeout: any;
    remainingItems: number;
    _items: any[];
    startPos: any;
    documentResizeListener: any;
    clonedItemsForStarting: any[];
    clonedItemsForFinishing: any[];
    allowAutoplay: boolean;
    interval: any;
    isCreated: boolean;
    swipeThreshold: number;
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    constructor(el: ElementRef, zone: NgZone, cd: ChangeDetectorRef);
    ngOnChanges(simpleChange: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngAfterContentChecked(): void;
    createStyle(): void;
    calculatePosition(): void;
    setCloneItems(): void;
    firstIndex(): number;
    lastIndex(): number;
    totalDots(): number;
    totalDotsArray(): any[];
    isVertical(): boolean;
    isCircular(): boolean;
    isAutoplay(): boolean;
    isForwardNavDisabled(): boolean;
    isBackwardNavDisabled(): boolean;
    isEmpty(): boolean;
    navForward(e: any, index?: any): void;
    navBackward(e: any, index?: any): void;
    onDotClick(e: any, index: any): void;
    step(dir: any, page: any): void;
    startAutoplay(): void;
    stopAutoplay(): void;
    onTransitionEnd(): void;
    onTouchStart(e: any): void;
    onTouchMove(e: any): void;
    onTouchEnd(e: any): void;
    changePageOnTouch(e: any, diff: any): void;
    bindDocumentListeners(): void;
    unbindDocumentListeners(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Carousel>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Carousel, "p-carousel", never, {
    "orientation": "orientation";
    "verticalViewPortHeight": "verticalViewPortHeight";
    "contentClass": "contentClass";
    "indicatorsContentClass": "indicatorsContentClass";
    "circular": "circular";
    "autoplayInterval": "autoplayInterval";
    "page": "page";
    "numVisible": "numVisible";
    "numScroll": "numScroll";
    "value": "value";
    "responsiveOptions": "responsiveOptions";
    "style": "style";
    "styleClass": "styleClass";
}, {
    "onPage": "onPage";
}, ["headerFacet", "footerFacet", "templates"]>;
}
export declare class CarouselModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<CarouselModule, [typeof Carousel], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.RippleModule], [typeof ɵngcc1.CommonModule, typeof Carousel, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<CarouselModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwuZC50cyIsInNvdXJjZXMiOlsiY2Fyb3VzZWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0ZBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlckNvbnRlbnRJbml0LCBUZW1wbGF0ZVJlZiwgUXVlcnlMaXN0LCBOZ1pvbmUsIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhcm91c2VsIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgem9uZTogTmdab25lO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBnZXQgcGFnZSgpOiBudW1iZXI7XG4gICAgc2V0IHBhZ2UodmFsOiBudW1iZXIpO1xuICAgIGdldCBudW1WaXNpYmxlKCk6IG51bWJlcjtcbiAgICBzZXQgbnVtVmlzaWJsZSh2YWw6IG51bWJlcik7XG4gICAgZ2V0IG51bVNjcm9sbCgpOiBudW1iZXI7XG4gICAgc2V0IG51bVNjcm9sbCh2YWw6IG51bWJlcik7XG4gICAgcmVzcG9uc2l2ZU9wdGlvbnM6IGFueVtdO1xuICAgIG9yaWVudGF0aW9uOiBzdHJpbmc7XG4gICAgdmVydGljYWxWaWV3UG9ydEhlaWdodDogc3RyaW5nO1xuICAgIGNvbnRlbnRDbGFzczogU3RyaW5nO1xuICAgIGluZGljYXRvcnNDb250ZW50Q2xhc3M6IFN0cmluZztcbiAgICBnZXQgdmFsdWUoKTogYW55W107XG4gICAgc2V0IHZhbHVlKHZhbDogYW55W10pO1xuICAgIGNpcmN1bGFyOiBib29sZWFuO1xuICAgIGF1dG9wbGF5SW50ZXJ2YWw6IG51bWJlcjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBvblBhZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGl0ZW1zQ29udGFpbmVyOiBFbGVtZW50UmVmO1xuICAgIGhlYWRlckZhY2V0OiBhbnk7XG4gICAgZm9vdGVyRmFjZXQ6IGFueTtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIF9udW1WaXNpYmxlOiBudW1iZXI7XG4gICAgX251bVNjcm9sbDogbnVtYmVyO1xuICAgIF9vbGROdW1TY3JvbGw6IG51bWJlcjtcbiAgICBwcmV2U3RhdGU6IGFueTtcbiAgICBkZWZhdWx0TnVtU2Nyb2xsOiBudW1iZXI7XG4gICAgZGVmYXVsdE51bVZpc2libGU6IG51bWJlcjtcbiAgICBfcGFnZTogbnVtYmVyO1xuICAgIF92YWx1ZTogYW55W107XG4gICAgY2Fyb3VzZWxTdHlsZTogYW55O1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdG90YWxTaGlmdGVkSXRlbXM6IGFueTtcbiAgICBpc1JlbWFpbmluZ0l0ZW1zQWRkZWQ6IGJvb2xlYW47XG4gICAgYW5pbWF0aW9uVGltZW91dDogYW55O1xuICAgIHRyYW5zbGF0ZVRpbWVvdXQ6IGFueTtcbiAgICByZW1haW5pbmdJdGVtczogbnVtYmVyO1xuICAgIF9pdGVtczogYW55W107XG4gICAgc3RhcnRQb3M6IGFueTtcbiAgICBkb2N1bWVudFJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgY2xvbmVkSXRlbXNGb3JTdGFydGluZzogYW55W107XG4gICAgY2xvbmVkSXRlbXNGb3JGaW5pc2hpbmc6IGFueVtdO1xuICAgIGFsbG93QXV0b3BsYXk6IGJvb2xlYW47XG4gICAgaW50ZXJ2YWw6IGFueTtcbiAgICBpc0NyZWF0ZWQ6IGJvb2xlYW47XG4gICAgc3dpcGVUaHJlc2hvbGQ6IG51bWJlcjtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2U6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkO1xuICAgIGNyZWF0ZVN0eWxlKCk6IHZvaWQ7XG4gICAgY2FsY3VsYXRlUG9zaXRpb24oKTogdm9pZDtcbiAgICBzZXRDbG9uZUl0ZW1zKCk6IHZvaWQ7XG4gICAgZmlyc3RJbmRleCgpOiBudW1iZXI7XG4gICAgbGFzdEluZGV4KCk6IG51bWJlcjtcbiAgICB0b3RhbERvdHMoKTogbnVtYmVyO1xuICAgIHRvdGFsRG90c0FycmF5KCk6IGFueVtdO1xuICAgIGlzVmVydGljYWwoKTogYm9vbGVhbjtcbiAgICBpc0NpcmN1bGFyKCk6IGJvb2xlYW47XG4gICAgaXNBdXRvcGxheSgpOiBib29sZWFuO1xuICAgIGlzRm9yd2FyZE5hdkRpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgaXNCYWNrd2FyZE5hdkRpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgaXNFbXB0eSgpOiBib29sZWFuO1xuICAgIG5hdkZvcndhcmQoZTogYW55LCBpbmRleD86IGFueSk6IHZvaWQ7XG4gICAgbmF2QmFja3dhcmQoZTogYW55LCBpbmRleD86IGFueSk6IHZvaWQ7XG4gICAgb25Eb3RDbGljayhlOiBhbnksIGluZGV4OiBhbnkpOiB2b2lkO1xuICAgIHN0ZXAoZGlyOiBhbnksIHBhZ2U6IGFueSk6IHZvaWQ7XG4gICAgc3RhcnRBdXRvcGxheSgpOiB2b2lkO1xuICAgIHN0b3BBdXRvcGxheSgpOiB2b2lkO1xuICAgIG9uVHJhbnNpdGlvbkVuZCgpOiB2b2lkO1xuICAgIG9uVG91Y2hTdGFydChlOiBhbnkpOiB2b2lkO1xuICAgIG9uVG91Y2hNb3ZlKGU6IGFueSk6IHZvaWQ7XG4gICAgb25Ub3VjaEVuZChlOiBhbnkpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2VPblRvdWNoKGU6IGFueSwgZGlmZjogYW55KTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICB1bmJpbmREb2N1bWVudExpc3RlbmVycygpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXJvdXNlbE1vZHVsZSB7XG59XG4iXX0=