import { TemplateRef, QueryList, ElementRef, EventEmitter, ChangeDetectorRef, OnDestroy, OnInit, AfterContentInit } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/ripple';
export declare const CASCADESELECT_VALUE_ACCESSOR: any;
export declare class CascadeSelectSub implements OnInit {
    private el;
    selectionPath: any[];
    options: any[];
    optionGroupChildren: any[];
    optionTemplate: TemplateRef<any>;
    level: number;
    optionLabel: string;
    optionValue: string;
    optionGroupLabel: string;
    dirty: boolean;
    root: boolean;
    onSelect: EventEmitter<any>;
    onGroupSelect: EventEmitter<any>;
    get parentActive(): boolean;
    set parentActive(val: boolean);
    activeOption: any;
    _parentActive: boolean;
    constructor(el: ElementRef);
    ngOnInit(): void;
    onOptionClick(event: any, option: any): void;
    onOptionSelect(event: any): void;
    onOptionGroupSelect(event: any): void;
    getOptionLabel(option: any): any;
    getOptionValue(option: any): any;
    getOptionGroupLabel(optionGroup: any): any;
    getOptionGroupChildren(optionGroup: any): any;
    isOptionGroup(option: any): any;
    getOptionLabelToRender(option: any): any;
    getItemClass(option: any): {
        'p-cascadeselect-item': boolean;
        'p-cascadeselect-item-group': any;
        'p-cascadeselect-item-active p-highlight': boolean;
    };
    isOptionActive(option: any): boolean;
    onKeyDown(event: any, option: any, index: any): void;
    position(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CascadeSelectSub>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CascadeSelectSub, "p-cascadeSelectSub", never, {
    "level": "level";
    "parentActive": "parentActive";
    "selectionPath": "selectionPath";
    "options": "options";
    "optionGroupChildren": "optionGroupChildren";
    "optionTemplate": "optionTemplate";
    "optionLabel": "optionLabel";
    "optionValue": "optionValue";
    "optionGroupLabel": "optionGroupLabel";
    "dirty": "dirty";
    "root": "root";
}, {
    "onSelect": "onSelect";
    "onGroupSelect": "onGroupSelect";
}, never>;
}
export declare class CascadeSelect implements OnInit, AfterContentInit, OnDestroy {
    private el;
    private cd;
    styleClass: string;
    style: any;
    options: any[];
    optionLabel: string;
    optionValue: string;
    optionGroupLabel: string;
    optionGroupChildren: string;
    placeholder: string;
    value: string;
    dataKey: string;
    inputId: string;
    tabindex: string;
    ariaLabelledBy: string;
    appendTo: string;
    disabled: boolean;
    rounded: boolean;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    focusInputEl: ElementRef;
    containerEl: ElementRef;
    onChange: EventEmitter<any>;
    onGroupChange: EventEmitter<any>;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    onBeforeShow: EventEmitter<any>;
    onBeforeHide: EventEmitter<any>;
    templates: QueryList<any>;
    selectionPath: any;
    focused: boolean;
    overlayVisible: boolean;
    dirty: boolean;
    valueTemplate: TemplateRef<any>;
    optionTemplate: TemplateRef<any>;
    outsideClickListener: any;
    scrollHandler: any;
    resizeListener: any;
    overlayEl: any;
    onModelChange: Function;
    onModelTouched: Function;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    onOptionSelect(event: any): void;
    onOptionGroupSelect(event: any): void;
    getOptionLabel(option: any): any;
    getOptionValue(option: any): any;
    getOptionGroupChildren(optionGroup: any, level: any): any;
    isOptionGroup(option: any, level: any): any;
    updateSelectionPath(): void;
    findModelOptionInGroup(option: any, level: any): any;
    show(): void;
    hide(): void;
    onClick(event: any): void;
    onFocus(): void;
    onBlur(): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    onOverlayAnimationDone(event: AnimationEvent): void;
    onOverlayEnter(): void;
    onOverlayLeave(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    alignOverlay(): void;
    bindOutsideClickListener(): void;
    unbindOutsideClickListener(): void;
    bindScrollListener(): void;
    unbindScrollListener(): void;
    bindResizeListener(): void;
    unbindResizeListener(): void;
    appendContainer(): void;
    restoreAppend(): void;
    label(): any;
    onKeyDown(event: any): void;
    containerClass(): {
        'p-cascadeselect p-component p-inputwrapper': boolean;
        'p-disabled': boolean;
        'p-focus': boolean;
        'p-inputwrapper-filled': string;
        'p-inputwrapper-focus': boolean;
    };
    labelClass(): {
        'p-cascadeselect-label': boolean;
        'p-placeholder': boolean;
        'p-cascadeselect-label-empty': boolean;
    };
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CascadeSelect>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CascadeSelect, "p-cascadeSelect", never, {
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
    "value": "value";
    "disabled": "disabled";
    "styleClass": "styleClass";
    "style": "style";
    "options": "options";
    "optionLabel": "optionLabel";
    "optionValue": "optionValue";
    "optionGroupLabel": "optionGroupLabel";
    "optionGroupChildren": "optionGroupChildren";
    "placeholder": "placeholder";
    "dataKey": "dataKey";
    "inputId": "inputId";
    "tabindex": "tabindex";
    "ariaLabelledBy": "ariaLabelledBy";
    "appendTo": "appendTo";
    "rounded": "rounded";
}, {
    "onChange": "onChange";
    "onGroupChange": "onGroupChange";
    "onShow": "onShow";
    "onHide": "onHide";
    "onBeforeShow": "onBeforeShow";
    "onBeforeHide": "onBeforeHide";
}, ["templates"]>;
}
export declare class CascadeSelectModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<CascadeSelectModule, [typeof CascadeSelect, typeof CascadeSelectSub], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.RippleModule], [typeof CascadeSelect, typeof CascadeSelectSub, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<CascadeSelectModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzY2FkZXNlbGVjdC5kLnRzIiwic291cmNlcyI6WyJjYXNjYWRlc2VsZWN0LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0NBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJGQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYsIFF1ZXJ5TGlzdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiwgT25EZXN0cm95LCBPbkluaXQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDQVNDQURFU0VMRUNUX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXNjYWRlU2VsZWN0U3ViIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHNlbGVjdGlvblBhdGg6IGFueVtdO1xuICAgIG9wdGlvbnM6IGFueVtdO1xuICAgIG9wdGlvbkdyb3VwQ2hpbGRyZW46IGFueVtdO1xuICAgIG9wdGlvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGxldmVsOiBudW1iZXI7XG4gICAgb3B0aW9uTGFiZWw6IHN0cmluZztcbiAgICBvcHRpb25WYWx1ZTogc3RyaW5nO1xuICAgIG9wdGlvbkdyb3VwTGFiZWw6IHN0cmluZztcbiAgICBkaXJ0eTogYm9vbGVhbjtcbiAgICByb290OiBib29sZWFuO1xuICAgIG9uU2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkdyb3VwU2VsZWN0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBnZXQgcGFyZW50QWN0aXZlKCk6IGJvb2xlYW47XG4gICAgc2V0IHBhcmVudEFjdGl2ZSh2YWw6IGJvb2xlYW4pO1xuICAgIGFjdGl2ZU9wdGlvbjogYW55O1xuICAgIF9wYXJlbnRBY3RpdmU6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgb25PcHRpb25DbGljayhldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25TZWxlY3QoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Hcm91cFNlbGVjdChldmVudDogYW55KTogdm9pZDtcbiAgICBnZXRPcHRpb25MYWJlbChvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRPcHRpb25WYWx1ZShvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRPcHRpb25Hcm91cExhYmVsKG9wdGlvbkdyb3VwOiBhbnkpOiBhbnk7XG4gICAgZ2V0T3B0aW9uR3JvdXBDaGlsZHJlbihvcHRpb25Hcm91cDogYW55KTogYW55O1xuICAgIGlzT3B0aW9uR3JvdXAob3B0aW9uOiBhbnkpOiBhbnk7XG4gICAgZ2V0T3B0aW9uTGFiZWxUb1JlbmRlcihvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRJdGVtQ2xhc3Mob3B0aW9uOiBhbnkpOiB7XG4gICAgICAgICdwLWNhc2NhZGVzZWxlY3QtaXRlbSc6IGJvb2xlYW47XG4gICAgICAgICdwLWNhc2NhZGVzZWxlY3QtaXRlbS1ncm91cCc6IGFueTtcbiAgICAgICAgJ3AtY2FzY2FkZXNlbGVjdC1pdGVtLWFjdGl2ZSBwLWhpZ2hsaWdodCc6IGJvb2xlYW47XG4gICAgfTtcbiAgICBpc09wdGlvbkFjdGl2ZShvcHRpb246IGFueSk6IGJvb2xlYW47XG4gICAgb25LZXlEb3duKGV2ZW50OiBhbnksIG9wdGlvbjogYW55LCBpbmRleDogYW55KTogdm9pZDtcbiAgICBwb3NpdGlvbigpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FzY2FkZVNlbGVjdCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgY2Q7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgb3B0aW9uczogYW55W107XG4gICAgb3B0aW9uTGFiZWw6IHN0cmluZztcbiAgICBvcHRpb25WYWx1ZTogc3RyaW5nO1xuICAgIG9wdGlvbkdyb3VwTGFiZWw6IHN0cmluZztcbiAgICBvcHRpb25Hcm91cENoaWxkcmVuOiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIGRhdGFLZXk6IHN0cmluZztcbiAgICBpbnB1dElkOiBzdHJpbmc7XG4gICAgdGFiaW5kZXg6IHN0cmluZztcbiAgICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nO1xuICAgIGFwcGVuZFRvOiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcm91bmRlZDogYm9vbGVhbjtcbiAgICBzaG93VHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBoaWRlVHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBmb2N1c0lucHV0RWw6IEVsZW1lbnRSZWY7XG4gICAgY29udGFpbmVyRWw6IEVsZW1lbnRSZWY7XG4gICAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uR3JvdXBDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU2hvdzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25IaWRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJlZm9yZVNob3c6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQmVmb3JlSGlkZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBzZWxlY3Rpb25QYXRoOiBhbnk7XG4gICAgZm9jdXNlZDogYm9vbGVhbjtcbiAgICBvdmVybGF5VmlzaWJsZTogYm9vbGVhbjtcbiAgICBkaXJ0eTogYm9vbGVhbjtcbiAgICB2YWx1ZVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIG9wdGlvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIG91dHNpZGVDbGlja0xpc3RlbmVyOiBhbnk7XG4gICAgc2Nyb2xsSGFuZGxlcjogYW55O1xuICAgIHJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgb3ZlcmxheUVsOiBhbnk7XG4gICAgb25Nb2RlbENoYW5nZTogRnVuY3Rpb247XG4gICAgb25Nb2RlbFRvdWNoZWQ6IEZ1bmN0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgb25PcHRpb25TZWxlY3QoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Hcm91cFNlbGVjdChldmVudDogYW55KTogdm9pZDtcbiAgICBnZXRPcHRpb25MYWJlbChvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRPcHRpb25WYWx1ZShvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRPcHRpb25Hcm91cENoaWxkcmVuKG9wdGlvbkdyb3VwOiBhbnksIGxldmVsOiBhbnkpOiBhbnk7XG4gICAgaXNPcHRpb25Hcm91cChvcHRpb246IGFueSwgbGV2ZWw6IGFueSk6IGFueTtcbiAgICB1cGRhdGVTZWxlY3Rpb25QYXRoKCk6IHZvaWQ7XG4gICAgZmluZE1vZGVsT3B0aW9uSW5Hcm91cChvcHRpb246IGFueSwgbGV2ZWw6IGFueSk6IGFueTtcbiAgICBzaG93KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Gb2N1cygpOiB2b2lkO1xuICAgIG9uQmx1cigpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUFuaW1hdGlvblN0YXJ0KGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgb25PdmVybGF5QW5pbWF0aW9uRG9uZShldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUVudGVyKCk6IHZvaWQ7XG4gICAgb25PdmVybGF5TGVhdmUoKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICBhbGlnbk92ZXJsYXkoKTogdm9pZDtcbiAgICBiaW5kT3V0c2lkZUNsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICB1bmJpbmRPdXRzaWRlQ2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIGJpbmRTY3JvbGxMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZFNjcm9sbExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgYmluZFJlc2l6ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kUmVzaXplTGlzdGVuZXIoKTogdm9pZDtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgbGFiZWwoKTogYW55O1xuICAgIG9uS2V5RG93bihldmVudDogYW55KTogdm9pZDtcbiAgICBjb250YWluZXJDbGFzcygpOiB7XG4gICAgICAgICdwLWNhc2NhZGVzZWxlY3QgcC1jb21wb25lbnQgcC1pbnB1dHdyYXBwZXInOiBib29sZWFuO1xuICAgICAgICAncC1kaXNhYmxlZCc6IGJvb2xlYW47XG4gICAgICAgICdwLWZvY3VzJzogYm9vbGVhbjtcbiAgICAgICAgJ3AtaW5wdXR3cmFwcGVyLWZpbGxlZCc6IHN0cmluZztcbiAgICAgICAgJ3AtaW5wdXR3cmFwcGVyLWZvY3VzJzogYm9vbGVhbjtcbiAgICB9O1xuICAgIGxhYmVsQ2xhc3MoKToge1xuICAgICAgICAncC1jYXNjYWRlc2VsZWN0LWxhYmVsJzogYm9vbGVhbjtcbiAgICAgICAgJ3AtcGxhY2Vob2xkZXInOiBib29sZWFuO1xuICAgICAgICAncC1jYXNjYWRlc2VsZWN0LWxhYmVsLWVtcHR5JzogYm9vbGVhbjtcbiAgICB9O1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXNjYWRlU2VsZWN0TW9kdWxlIHtcbn1cbiJdfQ==