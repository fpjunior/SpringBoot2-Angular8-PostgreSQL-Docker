import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
import * as ɵngcc3 from 'primeng/api';
export declare const CHIPS_VALUE_ACCESSOR: any;
export declare class Chips implements AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    style: any;
    styleClass: string;
    disabled: boolean;
    field: string;
    placeholder: string;
    max: number;
    ariaLabelledBy: string;
    tabindex: number;
    inputId: string;
    allowDuplicate: boolean;
    inputStyle: any;
    inputStyleClass: any;
    addOnTab: boolean;
    addOnBlur: boolean;
    separator: string;
    onAdd: EventEmitter<any>;
    onRemove: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onChipClick: EventEmitter<any>;
    inputViewChild: ElementRef;
    templates: QueryList<any>;
    itemTemplate: TemplateRef<any>;
    value: any;
    onModelChange: Function;
    onModelTouched: Function;
    valueChanged: boolean;
    focus: boolean;
    filled: boolean;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngAfterContentInit(): void;
    onClick(): void;
    onInput(): void;
    onPaste(event: any): void;
    updateFilledState(): void;
    onItemClick(event: Event, item: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    resolveFieldData(data: any, field: string): any;
    onInputFocus(event: FocusEvent): void;
    onInputBlur(event: FocusEvent): void;
    removeItem(event: Event, index: number): void;
    addItem(event: Event, item: string, preventDefault: boolean): void;
    onKeydown(event: KeyboardEvent): void;
    updateMaxedOut(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Chips>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Chips, "p-chips", never, {
    "allowDuplicate": "allowDuplicate";
    "disabled": "disabled";
    "style": "style";
    "styleClass": "styleClass";
    "field": "field";
    "placeholder": "placeholder";
    "max": "max";
    "ariaLabelledBy": "ariaLabelledBy";
    "tabindex": "tabindex";
    "inputId": "inputId";
    "inputStyle": "inputStyle";
    "inputStyleClass": "inputStyleClass";
    "addOnTab": "addOnTab";
    "addOnBlur": "addOnBlur";
    "separator": "separator";
}, {
    "onAdd": "onAdd";
    "onRemove": "onRemove";
    "onFocus": "onFocus";
    "onBlur": "onBlur";
    "onChipClick": "onChipClick";
}, ["templates"]>;
}
export declare class ChipsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ChipsModule, [typeof Chips], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.SharedModule], [typeof Chips, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ChipsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHMuZC50cyIsInNvdXJjZXMiOlsiY2hpcHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1EQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDSElQU19WQUxVRV9BQ0NFU1NPUjogYW55O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hpcHMgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIGZpZWxkOiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBtYXg6IG51bWJlcjtcbiAgICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nO1xuICAgIHRhYmluZGV4OiBudW1iZXI7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIGFsbG93RHVwbGljYXRlOiBib29sZWFuO1xuICAgIGlucHV0U3R5bGU6IGFueTtcbiAgICBpbnB1dFN0eWxlQ2xhc3M6IGFueTtcbiAgICBhZGRPblRhYjogYm9vbGVhbjtcbiAgICBhZGRPbkJsdXI6IGJvb2xlYW47XG4gICAgc2VwYXJhdG9yOiBzdHJpbmc7XG4gICAgb25BZGQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uUmVtb3ZlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkJsdXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQ2hpcENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbnB1dFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICB2YWx1ZTogYW55O1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICB2YWx1ZUNoYW5nZWQ6IGJvb2xlYW47XG4gICAgZm9jdXM6IGJvb2xlYW47XG4gICAgZmlsbGVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG9uQ2xpY2soKTogdm9pZDtcbiAgICBvbklucHV0KCk6IHZvaWQ7XG4gICAgb25QYXN0ZShldmVudDogYW55KTogdm9pZDtcbiAgICB1cGRhdGVGaWxsZWRTdGF0ZSgpOiB2b2lkO1xuICAgIG9uSXRlbUNsaWNrKGV2ZW50OiBFdmVudCwgaXRlbTogYW55KTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICByZXNvbHZlRmllbGREYXRhKGRhdGE6IGFueSwgZmllbGQ6IHN0cmluZyk6IGFueTtcbiAgICBvbklucHV0Rm9jdXMoZXZlbnQ6IEZvY3VzRXZlbnQpOiB2b2lkO1xuICAgIG9uSW5wdXRCbHVyKGV2ZW50OiBGb2N1c0V2ZW50KTogdm9pZDtcbiAgICByZW1vdmVJdGVtKGV2ZW50OiBFdmVudCwgaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgYWRkSXRlbShldmVudDogRXZlbnQsIGl0ZW06IHN0cmluZywgcHJldmVudERlZmF1bHQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uS2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgdXBkYXRlTWF4ZWRPdXQoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENoaXBzTW9kdWxlIHtcbn1cbiJdfQ==