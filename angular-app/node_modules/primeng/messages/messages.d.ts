import { OnDestroy, EventEmitter, AfterContentInit, ElementRef, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { Message, MessageService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/ripple';
export declare class Messages implements AfterContentInit, OnDestroy {
    messageService: MessageService;
    el: ElementRef;
    cd: ChangeDetectorRef;
    value: Message[];
    closable: boolean;
    style: any;
    styleClass: string;
    enableService: boolean;
    key: string;
    escape: boolean;
    severity: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    templates: QueryList<any>;
    valueChange: EventEmitter<Message[]>;
    messageSubscription: Subscription;
    clearSubscription: Subscription;
    contentTemplate: TemplateRef<any>;
    constructor(messageService: MessageService, el: ElementRef, cd: ChangeDetectorRef);
    ngAfterContentInit(): void;
    hasMessages(): boolean;
    clear(): void;
    removeMessage(i: number): void;
    get icon(): string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Messages>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Messages, "p-messages", never, {
    "closable": "closable";
    "enableService": "enableService";
    "escape": "escape";
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
    "value": "value";
    "style": "style";
    "styleClass": "styleClass";
    "key": "key";
    "severity": "severity";
}, {
    "valueChange": "valueChange";
}, ["templates"]>;
}
export declare class MessagesModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MessagesModule, [typeof Messages], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.RippleModule], [typeof Messages]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MessagesModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuZC50cyIsInNvdXJjZXMiOlsibWVzc2FnZXMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgQWZ0ZXJDb250ZW50SW5pdCwgRWxlbWVudFJlZiwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lc3NhZ2UsIE1lc3NhZ2VTZXJ2aWNlIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNZXNzYWdlcyBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSB7XG4gICAgbWVzc2FnZVNlcnZpY2U6IE1lc3NhZ2VTZXJ2aWNlO1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICB2YWx1ZTogTWVzc2FnZVtdO1xuICAgIGNsb3NhYmxlOiBib29sZWFuO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGVuYWJsZVNlcnZpY2U6IGJvb2xlYW47XG4gICAga2V5OiBzdHJpbmc7XG4gICAgZXNjYXBlOiBib29sZWFuO1xuICAgIHNldmVyaXR5OiBzdHJpbmc7XG4gICAgc2hvd1RyYW5zaXRpb25PcHRpb25zOiBzdHJpbmc7XG4gICAgaGlkZVRyYW5zaXRpb25PcHRpb25zOiBzdHJpbmc7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICB2YWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPE1lc3NhZ2VbXT47XG4gICAgbWVzc2FnZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGNsZWFyU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2VTZXJ2aWNlOiBNZXNzYWdlU2VydmljZSwgZWw6IEVsZW1lbnRSZWYsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgaGFzTWVzc2FnZXMoKTogYm9vbGVhbjtcbiAgICBjbGVhcigpOiB2b2lkO1xuICAgIHJlbW92ZU1lc3NhZ2UoaTogbnVtYmVyKTogdm9pZDtcbiAgICBnZXQgaWNvbigpOiBzdHJpbmc7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1lc3NhZ2VzTW9kdWxlIHtcbn1cbiJdfQ==