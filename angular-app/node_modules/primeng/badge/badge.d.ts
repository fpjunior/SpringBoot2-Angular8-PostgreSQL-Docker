import { OnDestroy, AfterViewInit, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class BadgeDirective implements AfterViewInit, OnDestroy {
    el: ElementRef;
    iconPos: 'left' | 'right' | 'top' | 'bottom';
    _value: string;
    initialized: boolean;
    private id;
    constructor(el: ElementRef);
    ngAfterViewInit(): void;
    get value(): string;
    set value(val: string);
    severity: string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BadgeDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<BadgeDirective, "[pBadge]", never, {
    "iconPos": "iconPos";
    "value": "value";
    "severity": "severity";
}, {}, never>;
}
export declare class Badge {
    styleClass: string;
    style: any;
    size: string;
    severity: string;
    value: string;
    containerClass(): {
        'p-badge p-component': boolean;
        'p-badge-no-gutter': boolean;
        'p-badge-lg': boolean;
        'p-badge-xl': boolean;
        'p-badge-info': boolean;
        'p-badge-success': boolean;
        'p-badge-warning': boolean;
        'p-badge-danger': boolean;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Badge>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Badge, "p-badge", never, {
    "styleClass": "styleClass";
    "style": "style";
    "size": "size";
    "severity": "severity";
    "value": "value";
}, {}, never>;
}
export declare class BadgeModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<BadgeModule, [typeof Badge, typeof BadgeDirective], [typeof ɵngcc1.CommonModule], [typeof Badge, typeof BadgeDirective, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<BadgeModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuZC50cyIsInNvdXJjZXMiOlsiYmFkZ2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCYWRnZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgaWNvblBvczogJ2xlZnQnIHwgJ3JpZ2h0JyB8ICd0b3AnIHwgJ2JvdHRvbSc7XG4gICAgX3ZhbHVlOiBzdHJpbmc7XG4gICAgaW5pdGlhbGl6ZWQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBpZDtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgZ2V0IHZhbHVlKCk6IHN0cmluZztcbiAgICBzZXQgdmFsdWUodmFsOiBzdHJpbmcpO1xuICAgIHNldmVyaXR5OiBzdHJpbmc7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJhZGdlIHtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzaXplOiBzdHJpbmc7XG4gICAgc2V2ZXJpdHk6IHN0cmluZztcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIGNvbnRhaW5lckNsYXNzKCk6IHtcbiAgICAgICAgJ3AtYmFkZ2UgcC1jb21wb25lbnQnOiBib29sZWFuO1xuICAgICAgICAncC1iYWRnZS1uby1ndXR0ZXInOiBib29sZWFuO1xuICAgICAgICAncC1iYWRnZS1sZyc6IGJvb2xlYW47XG4gICAgICAgICdwLWJhZGdlLXhsJzogYm9vbGVhbjtcbiAgICAgICAgJ3AtYmFkZ2UtaW5mbyc6IGJvb2xlYW47XG4gICAgICAgICdwLWJhZGdlLXN1Y2Nlc3MnOiBib29sZWFuO1xuICAgICAgICAncC1iYWRnZS13YXJuaW5nJzogYm9vbGVhbjtcbiAgICAgICAgJ3AtYmFkZ2UtZGFuZ2VyJzogYm9vbGVhbjtcbiAgICB9O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQmFkZ2VNb2R1bGUge1xufVxuIl19