import { AfterViewInit, OnDestroy, ElementRef, NgZone, ChangeDetectorRef, AfterContentInit, QueryList, TemplateRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class ScrollPanel implements AfterViewInit, AfterContentInit, OnDestroy {
    el: ElementRef;
    zone: NgZone;
    cd: ChangeDetectorRef;
    style: any;
    styleClass: string;
    constructor(el: ElementRef, zone: NgZone, cd: ChangeDetectorRef);
    containerViewChild: ElementRef;
    contentViewChild: ElementRef;
    xBarViewChild: ElementRef;
    yBarViewChild: ElementRef;
    templates: QueryList<any>;
    scrollYRatio: number;
    scrollXRatio: number;
    timeoutFrame: any;
    initialized: boolean;
    lastPageY: number;
    lastPageX: number;
    isXBarClicked: boolean;
    isYBarClicked: boolean;
    contentTemplate: TemplateRef<any>;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    calculateContainerHeight(): void;
    moveBar(): void;
    onYBarMouseDown(e: MouseEvent): void;
    onXBarMouseDown(e: MouseEvent): void;
    onDocumentMouseMove(e: MouseEvent): void;
    onMouseMoveForXBar(e: MouseEvent): void;
    onMouseMoveForYBar(e: MouseEvent): void;
    scrollTop(scrollTop: number): void;
    onDocumentMouseUp(e: Event): void;
    requestAnimationFrame(f: Function): void;
    ngOnDestroy(): void;
    refresh(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ScrollPanel>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ScrollPanel, "p-scrollPanel", never, {
    "style": "style";
    "styleClass": "styleClass";
}, {}, ["templates"]>;
}
export declare class ScrollPanelModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ScrollPanelModule, [typeof ScrollPanel], [typeof ɵngcc1.CommonModule], [typeof ScrollPanel]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ScrollPanelModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xscGFuZWwuZC50cyIsInNvdXJjZXMiOlsic2Nyb2xscGFuZWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQ0E7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgRWxlbWVudFJlZiwgTmdab25lLCBDaGFuZ2VEZXRlY3RvclJlZiwgQWZ0ZXJDb250ZW50SW5pdCwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2Nyb2xsUGFuZWwgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHpvbmU6IE5nWm9uZTtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSwgY2Q6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBjb250YWluZXJWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgY29udGVudFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB4QmFyVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIHlCYXJWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBzY3JvbGxZUmF0aW86IG51bWJlcjtcbiAgICBzY3JvbGxYUmF0aW86IG51bWJlcjtcbiAgICB0aW1lb3V0RnJhbWU6IGFueTtcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcbiAgICBsYXN0UGFnZVk6IG51bWJlcjtcbiAgICBsYXN0UGFnZVg6IG51bWJlcjtcbiAgICBpc1hCYXJDbGlja2VkOiBib29sZWFuO1xuICAgIGlzWUJhckNsaWNrZWQ6IGJvb2xlYW47XG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIGNhbGN1bGF0ZUNvbnRhaW5lckhlaWdodCgpOiB2b2lkO1xuICAgIG1vdmVCYXIoKTogdm9pZDtcbiAgICBvbllCYXJNb3VzZURvd24oZTogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgb25YQmFyTW91c2VEb3duKGU6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uRG9jdW1lbnRNb3VzZU1vdmUoZTogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgb25Nb3VzZU1vdmVGb3JYQmFyKGU6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIG9uTW91c2VNb3ZlRm9yWUJhcihlOiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBzY3JvbGxUb3Aoc2Nyb2xsVG9wOiBudW1iZXIpOiB2b2lkO1xuICAgIG9uRG9jdW1lbnRNb3VzZVVwKGU6IEV2ZW50KTogdm9pZDtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcmVmcmVzaCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2Nyb2xsUGFuZWxNb2R1bGUge1xufVxuIl19