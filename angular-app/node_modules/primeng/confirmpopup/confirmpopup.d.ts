import { ElementRef, ChangeDetectorRef, OnDestroy, Renderer2 } from '@angular/core';
import { Confirmation, ConfirmationService, PrimeNGConfig } from 'primeng/api';
import { Subscription } from 'rxjs';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
export declare class ConfirmPopup implements OnDestroy {
    el: ElementRef;
    private confirmationService;
    renderer: Renderer2;
    private cd;
    config: PrimeNGConfig;
    key: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    autoZIndex: boolean;
    baseZIndex: number;
    style: any;
    styleClass: string;
    container: HTMLDivElement;
    subscription: Subscription;
    confirmation: Confirmation;
    _visible: boolean;
    documentClickListener: any;
    documentResizeListener: any;
    scrollHandler: any;
    get visible(): any;
    set visible(value: any);
    constructor(el: ElementRef, confirmationService: ConfirmationService, renderer: Renderer2, cd: ChangeDetectorRef, config: PrimeNGConfig);
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    align(): void;
    hide(): void;
    accept(): void;
    reject(): void;
    bindListeners(): void;
    unbindListeners(): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    onWindowResize(): void;
    bindDocumentResizeListener(): void;
    unbindDocumentResizeListener(): void;
    bindScrollListener(): void;
    unbindScrollListener(): void;
    unsubscribeConfirmationSubscriptions(): void;
    onContainerDestroy(): void;
    restoreAppend(): void;
    get acceptButtonLabel(): string;
    get rejectButtonLabel(): string;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmPopup>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmPopup, "p-confirmPopup", never, {
    "showTransitionOptions": "showTransitionOptions";
    "hideTransitionOptions": "hideTransitionOptions";
    "autoZIndex": "autoZIndex";
    "baseZIndex": "baseZIndex";
    "visible": "visible";
    "key": "key";
    "style": "style";
    "styleClass": "styleClass";
}, {}, never>;
}
export declare class ConfirmPopupModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmPopupModule, [typeof ConfirmPopup], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmPopup]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmPopupModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybXBvcHVwLmQudHMiLCJzb3VyY2VzIjpbImNvbmZpcm1wb3B1cC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0Q0E7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIENoYW5nZURldGVjdG9yUmVmLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlybWF0aW9uLCBDb25maXJtYXRpb25TZXJ2aWNlLCBQcmltZU5HQ29uZmlnIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybVBvcHVwIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGNvbmZpcm1hdGlvblNlcnZpY2U7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcml2YXRlIGNkO1xuICAgIGNvbmZpZzogUHJpbWVOR0NvbmZpZztcbiAgICBrZXk6IHN0cmluZztcbiAgICBzaG93VHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBoaWRlVHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBhdXRvWkluZGV4OiBib29sZWFuO1xuICAgIGJhc2VaSW5kZXg6IG51bWJlcjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBjb250YWluZXI6IEhUTUxEaXZFbGVtZW50O1xuICAgIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGNvbmZpcm1hdGlvbjogQ29uZmlybWF0aW9uO1xuICAgIF92aXNpYmxlOiBib29sZWFuO1xuICAgIGRvY3VtZW50Q2xpY2tMaXN0ZW5lcjogYW55O1xuICAgIGRvY3VtZW50UmVzaXplTGlzdGVuZXI6IGFueTtcbiAgICBzY3JvbGxIYW5kbGVyOiBhbnk7XG4gICAgZ2V0IHZpc2libGUoKTogYW55O1xuICAgIHNldCB2aXNpYmxlKHZhbHVlOiBhbnkpO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjb25maXJtYXRpb25TZXJ2aWNlOiBDb25maXJtYXRpb25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsIGNvbmZpZzogUHJpbWVOR0NvbmZpZyk7XG4gICAgb25BbmltYXRpb25TdGFydChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIG9uQW5pbWF0aW9uRW5kKGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgYWxpZ24oKTogdm9pZDtcbiAgICBoaWRlKCk6IHZvaWQ7XG4gICAgYWNjZXB0KCk6IHZvaWQ7XG4gICAgcmVqZWN0KCk6IHZvaWQ7XG4gICAgYmluZExpc3RlbmVycygpOiB2b2lkO1xuICAgIHVuYmluZExpc3RlbmVycygpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICB1bmJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICBvbldpbmRvd1Jlc2l6ZSgpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudFJlc2l6ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRSZXNpemVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIGJpbmRTY3JvbGxMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZFNjcm9sbExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5zdWJzY3JpYmVDb25maXJtYXRpb25TdWJzY3JpcHRpb25zKCk6IHZvaWQ7XG4gICAgb25Db250YWluZXJEZXN0cm95KCk6IHZvaWQ7XG4gICAgcmVzdG9yZUFwcGVuZCgpOiB2b2lkO1xuICAgIGdldCBhY2NlcHRCdXR0b25MYWJlbCgpOiBzdHJpbmc7XG4gICAgZ2V0IHJlamVjdEJ1dHRvbkxhYmVsKCk6IHN0cmluZztcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29uZmlybVBvcHVwTW9kdWxlIHtcbn1cbiJdfQ==