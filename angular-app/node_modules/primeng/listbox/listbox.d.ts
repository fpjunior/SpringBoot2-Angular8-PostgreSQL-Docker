import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { FilterService } from 'primeng/api';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/ripple';
export declare const LISTBOX_VALUE_ACCESSOR: any;
export declare class Listbox implements AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    filterService: FilterService;
    multiple: boolean;
    style: any;
    styleClass: string;
    listStyle: any;
    listStyleClass: string;
    readonly: boolean;
    disabled: boolean;
    checkbox: boolean;
    filter: boolean;
    filterMatchMode: string;
    filterLocale: string;
    metaKeySelection: boolean;
    dataKey: string;
    showToggleAll: boolean;
    optionLabel: string;
    optionValue: string;
    optionDisabled: string;
    ariaFilterLabel: string;
    filterPlaceHolder: string;
    onChange: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onDblClick: EventEmitter<any>;
    headerCheckboxViewChild: ElementRef;
    headerFacet: any;
    footerFacet: any;
    templates: QueryList<any>;
    _options: any[];
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    _filterValue: string;
    _filteredOptions: any[];
    filtered: boolean;
    value: any;
    onModelChange: Function;
    onModelTouched: Function;
    optionTouched: boolean;
    focus: boolean;
    headerCheckboxFocus: boolean;
    constructor(el: ElementRef, cd: ChangeDetectorRef, filterService: FilterService);
    get options(): any[];
    set options(val: any[]);
    get filterValue(): string;
    set filterValue(val: string);
    ngAfterContentInit(): void;
    getOptionLabel(option: any): any;
    getOptionValue(option: any): any;
    isOptionDisabled(option: any): any;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    onOptionClick(event: Event, option: any): void;
    onOptionTouchEnd(option: any): void;
    onOptionDoubleClick(event: Event, option: any): any;
    onOptionClickSingle(event: any, option: any): void;
    onOptionClickMultiple(event: any, option: any): void;
    onOptionClickCheckbox(event: any, option: any): void;
    removeOption(option: any): void;
    isSelected(option: any): boolean;
    get allChecked(): boolean;
    get optionsToRender(): any[];
    hasFilter(): boolean;
    onFilter(event: KeyboardEvent): void;
    filterOptions(): void;
    get toggleAllDisabled(): boolean;
    toggleAll(event: any): void;
    checkAll(): void;
    uncheckAll(): void;
    onOptionKeyDown(event: KeyboardEvent, option: any): void;
    findNextItem(item: any): any;
    findPrevItem(item: any): any;
    onHeaderCheckboxFocus(): void;
    onHeaderCheckboxBlur(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Listbox>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Listbox, "p-listbox", never, {
    "checkbox": "checkbox";
    "filter": "filter";
    "filterMatchMode": "filterMatchMode";
    "metaKeySelection": "metaKeySelection";
    "showToggleAll": "showToggleAll";
    "options": "options";
    "filterValue": "filterValue";
    "disabled": "disabled";
    "multiple": "multiple";
    "style": "style";
    "styleClass": "styleClass";
    "listStyle": "listStyle";
    "listStyleClass": "listStyleClass";
    "readonly": "readonly";
    "filterLocale": "filterLocale";
    "dataKey": "dataKey";
    "optionLabel": "optionLabel";
    "optionValue": "optionValue";
    "optionDisabled": "optionDisabled";
    "ariaFilterLabel": "ariaFilterLabel";
    "filterPlaceHolder": "filterPlaceHolder";
}, {
    "onChange": "onChange";
    "onClick": "onClick";
    "onDblClick": "onDblClick";
}, ["headerFacet", "footerFacet", "templates"]>;
}
export declare class ListboxModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ListboxModule, [typeof Listbox], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.RippleModule], [typeof Listbox, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ListboxModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGJveC5kLnRzIiwic291cmNlcyI6WyJsaXN0Ym94LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErRUE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgQWZ0ZXJDb250ZW50SW5pdCwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IExJU1RCT1hfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExpc3Rib3ggaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIGZpbHRlclNlcnZpY2U6IEZpbHRlclNlcnZpY2U7XG4gICAgbXVsdGlwbGU6IGJvb2xlYW47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgbGlzdFN0eWxlOiBhbnk7XG4gICAgbGlzdFN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBjaGVja2JveDogYm9vbGVhbjtcbiAgICBmaWx0ZXI6IGJvb2xlYW47XG4gICAgZmlsdGVyTWF0Y2hNb2RlOiBzdHJpbmc7XG4gICAgZmlsdGVyTG9jYWxlOiBzdHJpbmc7XG4gICAgbWV0YUtleVNlbGVjdGlvbjogYm9vbGVhbjtcbiAgICBkYXRhS2V5OiBzdHJpbmc7XG4gICAgc2hvd1RvZ2dsZUFsbDogYm9vbGVhbjtcbiAgICBvcHRpb25MYWJlbDogc3RyaW5nO1xuICAgIG9wdGlvblZhbHVlOiBzdHJpbmc7XG4gICAgb3B0aW9uRGlzYWJsZWQ6IHN0cmluZztcbiAgICBhcmlhRmlsdGVyTGFiZWw6IHN0cmluZztcbiAgICBmaWx0ZXJQbGFjZUhvbGRlcjogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkRibENsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBoZWFkZXJDaGVja2JveFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBoZWFkZXJGYWNldDogYW55O1xuICAgIGZvb3RlckZhY2V0OiBhbnk7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBfb3B0aW9uczogYW55W107XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGZvb3RlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIF9maWx0ZXJWYWx1ZTogc3RyaW5nO1xuICAgIF9maWx0ZXJlZE9wdGlvbnM6IGFueVtdO1xuICAgIGZpbHRlcmVkOiBib29sZWFuO1xuICAgIHZhbHVlOiBhbnk7XG4gICAgb25Nb2RlbENoYW5nZTogRnVuY3Rpb247XG4gICAgb25Nb2RlbFRvdWNoZWQ6IEZ1bmN0aW9uO1xuICAgIG9wdGlvblRvdWNoZWQ6IGJvb2xlYW47XG4gICAgZm9jdXM6IGJvb2xlYW47XG4gICAgaGVhZGVyQ2hlY2tib3hGb2N1czogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgY2Q6IENoYW5nZURldGVjdG9yUmVmLCBmaWx0ZXJTZXJ2aWNlOiBGaWx0ZXJTZXJ2aWNlKTtcbiAgICBnZXQgb3B0aW9ucygpOiBhbnlbXTtcbiAgICBzZXQgb3B0aW9ucyh2YWw6IGFueVtdKTtcbiAgICBnZXQgZmlsdGVyVmFsdWUoKTogc3RyaW5nO1xuICAgIHNldCBmaWx0ZXJWYWx1ZSh2YWw6IHN0cmluZyk7XG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XG4gICAgZ2V0T3B0aW9uTGFiZWwob3B0aW9uOiBhbnkpOiBhbnk7XG4gICAgZ2V0T3B0aW9uVmFsdWUob3B0aW9uOiBhbnkpOiBhbnk7XG4gICAgaXNPcHRpb25EaXNhYmxlZChvcHRpb246IGFueSk6IGFueTtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICBvbk9wdGlvbkNsaWNrKGV2ZW50OiBFdmVudCwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIG9uT3B0aW9uVG91Y2hFbmQob3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIG9uT3B0aW9uRG91YmxlQ2xpY2soZXZlbnQ6IEV2ZW50LCBvcHRpb246IGFueSk6IGFueTtcbiAgICBvbk9wdGlvbkNsaWNrU2luZ2xlKGV2ZW50OiBhbnksIG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBvbk9wdGlvbkNsaWNrTXVsdGlwbGUoZXZlbnQ6IGFueSwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIG9uT3B0aW9uQ2xpY2tDaGVja2JveChldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgcmVtb3ZlT3B0aW9uKG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBpc1NlbGVjdGVkKG9wdGlvbjogYW55KTogYm9vbGVhbjtcbiAgICBnZXQgYWxsQ2hlY2tlZCgpOiBib29sZWFuO1xuICAgIGdldCBvcHRpb25zVG9SZW5kZXIoKTogYW55W107XG4gICAgaGFzRmlsdGVyKCk6IGJvb2xlYW47XG4gICAgb25GaWx0ZXIoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIGZpbHRlck9wdGlvbnMoKTogdm9pZDtcbiAgICBnZXQgdG9nZ2xlQWxsRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICB0b2dnbGVBbGwoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgY2hlY2tBbGwoKTogdm9pZDtcbiAgICB1bmNoZWNrQWxsKCk6IHZvaWQ7XG4gICAgb25PcHRpb25LZXlEb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgZmluZE5leHRJdGVtKGl0ZW06IGFueSk6IGFueTtcbiAgICBmaW5kUHJldkl0ZW0oaXRlbTogYW55KTogYW55O1xuICAgIG9uSGVhZGVyQ2hlY2tib3hGb2N1cygpOiB2b2lkO1xuICAgIG9uSGVhZGVyQ2hlY2tib3hCbHVyKCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMaXN0Ym94TW9kdWxlIHtcbn1cbiJdfQ==