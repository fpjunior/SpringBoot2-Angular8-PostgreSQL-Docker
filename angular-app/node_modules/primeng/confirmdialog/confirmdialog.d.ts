import { ElementRef, OnDestroy, Renderer2, NgZone, ChangeDetectorRef, QueryList, TemplateRef, AfterContentInit } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { PrimeNGConfig } from 'primeng/api';
import { Confirmation } from 'primeng/api';
import { ConfirmationService } from 'primeng/api';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/button';
import * as ɵngcc3 from 'primeng/api';
export declare class ConfirmDialog implements AfterContentInit, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private confirmationService;
    zone: NgZone;
    private cd;
    config: PrimeNGConfig;
    header: string;
    icon: string;
    message: string;
    style: any;
    styleClass: string;
    maskStyleClass: string;
    acceptIcon: string;
    acceptLabel: string;
    acceptAriaLabel: string;
    acceptVisible: boolean;
    rejectIcon: string;
    rejectLabel: string;
    rejectAriaLabel: string;
    rejectVisible: boolean;
    acceptButtonStyleClass: string;
    rejectButtonStyleClass: string;
    closeOnEscape: boolean;
    dismissableMask: boolean;
    blockScroll: boolean;
    rtl: boolean;
    closable: boolean;
    appendTo: any;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    transitionOptions: string;
    focusTrap: boolean;
    defaultFocus: string;
    get visible(): any;
    set visible(value: any);
    get position(): string;
    set position(value: string);
    footer: any;
    contentViewChild: ElementRef;
    templates: QueryList<any>;
    ngAfterContentInit(): void;
    footerTemplate: TemplateRef<any>;
    confirmation: Confirmation;
    _visible: boolean;
    maskVisible: boolean;
    documentEscapeListener: any;
    container: HTMLDivElement;
    wrapper: HTMLElement;
    contentContainer: HTMLDivElement;
    subscription: Subscription;
    maskClickListener: Function;
    preWidth: number;
    _position: string;
    transformOptions: any;
    confirmationOptions: Confirmation;
    constructor(el: ElementRef, renderer: Renderer2, confirmationService: ConfirmationService, zone: NgZone, cd: ChangeDetectorRef, config: PrimeNGConfig);
    option(name: string): any;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    getElementToFocus(): any;
    appendContainer(): void;
    restoreAppend(): void;
    enableModality(): void;
    disableModality(): void;
    close(event: Event): void;
    hide(): void;
    moveOnTop(): void;
    getMaskClass(): {
        'p-dialog-mask p-component-overlay': boolean;
        'p-dialog-mask-scrollblocker': boolean;
    };
    getPositionClass(): string;
    bindGlobalListeners(): void;
    unbindGlobalListeners(): void;
    unbindMaskClickListener(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    accept(): void;
    reject(): void;
    get acceptButtonLabel(): string;
    get rejectButtonLabel(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmDialog>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ConfirmDialog, "p-confirmDialog", never, {
    "acceptIcon": "acceptIcon";
    "acceptVisible": "acceptVisible";
    "rejectIcon": "rejectIcon";
    "rejectVisible": "rejectVisible";
    "closeOnEscape": "closeOnEscape";
    "blockScroll": "blockScroll";
    "closable": "closable";
    "autoZIndex": "autoZIndex";
    "baseZIndex": "baseZIndex";
    "transitionOptions": "transitionOptions";
    "focusTrap": "focusTrap";
    "defaultFocus": "defaultFocus";
    "visible": "visible";
    "position": "position";
    "header": "header";
    "icon": "icon";
    "message": "message";
    "style": "style";
    "styleClass": "styleClass";
    "maskStyleClass": "maskStyleClass";
    "acceptLabel": "acceptLabel";
    "acceptAriaLabel": "acceptAriaLabel";
    "rejectLabel": "rejectLabel";
    "rejectAriaLabel": "rejectAriaLabel";
    "acceptButtonStyleClass": "acceptButtonStyleClass";
    "rejectButtonStyleClass": "rejectButtonStyleClass";
    "dismissableMask": "dismissableMask";
    "rtl": "rtl";
    "appendTo": "appendTo";
    "key": "key";
}, {}, ["footer", "templates"]>;
}
export declare class ConfirmDialogModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ConfirmDialogModule, [typeof ConfirmDialog], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ButtonModule], [typeof ConfirmDialog, typeof ɵngcc2.ButtonModule, typeof ɵngcc3.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ConfirmDialogModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZy5kLnRzIiwic291cmNlcyI6WyJjb25maXJtZGlhbG9nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtRkE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBOZ1pvbmUsIENoYW5nZURldGVjdG9yUmVmLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgUHJpbWVOR0NvbmZpZyB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IENvbmZpcm1hdGlvbiB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IENvbmZpcm1hdGlvblNlcnZpY2UgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbmZpcm1EaWFsb2cgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgcHJpdmF0ZSBjb25maXJtYXRpb25TZXJ2aWNlO1xuICAgIHpvbmU6IE5nWm9uZTtcbiAgICBwcml2YXRlIGNkO1xuICAgIGNvbmZpZzogUHJpbWVOR0NvbmZpZztcbiAgICBoZWFkZXI6IHN0cmluZztcbiAgICBpY29uOiBzdHJpbmc7XG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIG1hc2tTdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgYWNjZXB0SWNvbjogc3RyaW5nO1xuICAgIGFjY2VwdExhYmVsOiBzdHJpbmc7XG4gICAgYWNjZXB0QXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgYWNjZXB0VmlzaWJsZTogYm9vbGVhbjtcbiAgICByZWplY3RJY29uOiBzdHJpbmc7XG4gICAgcmVqZWN0TGFiZWw6IHN0cmluZztcbiAgICByZWplY3RBcmlhTGFiZWw6IHN0cmluZztcbiAgICByZWplY3RWaXNpYmxlOiBib29sZWFuO1xuICAgIGFjY2VwdEJ1dHRvblN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICByZWplY3RCdXR0b25TdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY2xvc2VPbkVzY2FwZTogYm9vbGVhbjtcbiAgICBkaXNtaXNzYWJsZU1hc2s6IGJvb2xlYW47XG4gICAgYmxvY2tTY3JvbGw6IGJvb2xlYW47XG4gICAgcnRsOiBib29sZWFuO1xuICAgIGNsb3NhYmxlOiBib29sZWFuO1xuICAgIGFwcGVuZFRvOiBhbnk7XG4gICAga2V5OiBzdHJpbmc7XG4gICAgYXV0b1pJbmRleDogYm9vbGVhbjtcbiAgICBiYXNlWkluZGV4OiBudW1iZXI7XG4gICAgdHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBmb2N1c1RyYXA6IGJvb2xlYW47XG4gICAgZGVmYXVsdEZvY3VzOiBzdHJpbmc7XG4gICAgZ2V0IHZpc2libGUoKTogYW55O1xuICAgIHNldCB2aXNpYmxlKHZhbHVlOiBhbnkpO1xuICAgIGdldCBwb3NpdGlvbigpOiBzdHJpbmc7XG4gICAgc2V0IHBvc2l0aW9uKHZhbHVlOiBzdHJpbmcpO1xuICAgIGZvb3RlcjogYW55O1xuICAgIGNvbnRlbnRWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBmb290ZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25maXJtYXRpb246IENvbmZpcm1hdGlvbjtcbiAgICBfdmlzaWJsZTogYm9vbGVhbjtcbiAgICBtYXNrVmlzaWJsZTogYm9vbGVhbjtcbiAgICBkb2N1bWVudEVzY2FwZUxpc3RlbmVyOiBhbnk7XG4gICAgY29udGFpbmVyOiBIVE1MRGl2RWxlbWVudDtcbiAgICB3cmFwcGVyOiBIVE1MRWxlbWVudDtcbiAgICBjb250ZW50Q29udGFpbmVyOiBIVE1MRGl2RWxlbWVudDtcbiAgICBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBtYXNrQ2xpY2tMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgcHJlV2lkdGg6IG51bWJlcjtcbiAgICBfcG9zaXRpb246IHN0cmluZztcbiAgICB0cmFuc2Zvcm1PcHRpb25zOiBhbnk7XG4gICAgY29uZmlybWF0aW9uT3B0aW9uczogQ29uZmlybWF0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjb25maXJtYXRpb25TZXJ2aWNlOiBDb25maXJtYXRpb25TZXJ2aWNlLCB6b25lOiBOZ1pvbmUsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgY29uZmlnOiBQcmltZU5HQ29uZmlnKTtcbiAgICBvcHRpb24obmFtZTogc3RyaW5nKTogYW55O1xuICAgIG9uQW5pbWF0aW9uU3RhcnQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBvbkFuaW1hdGlvbkVuZChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIGdldEVsZW1lbnRUb0ZvY3VzKCk6IGFueTtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgZW5hYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBkaXNhYmxlTW9kYWxpdHkoKTogdm9pZDtcbiAgICBjbG9zZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICBtb3ZlT25Ub3AoKTogdm9pZDtcbiAgICBnZXRNYXNrQ2xhc3MoKToge1xuICAgICAgICAncC1kaWFsb2ctbWFzayBwLWNvbXBvbmVudC1vdmVybGF5JzogYm9vbGVhbjtcbiAgICAgICAgJ3AtZGlhbG9nLW1hc2stc2Nyb2xsYmxvY2tlcic6IGJvb2xlYW47XG4gICAgfTtcbiAgICBnZXRQb3NpdGlvbkNsYXNzKCk6IHN0cmluZztcbiAgICBiaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kR2xvYmFsTGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kTWFza0NsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICBvbk92ZXJsYXlIaWRlKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBhY2NlcHQoKTogdm9pZDtcbiAgICByZWplY3QoKTogdm9pZDtcbiAgICBnZXQgYWNjZXB0QnV0dG9uTGFiZWwoKTogc3RyaW5nO1xuICAgIGdldCByZWplY3RCdXR0b25MYWJlbCgpOiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb25maXJtRGlhbG9nTW9kdWxlIHtcbn1cbiJdfQ==