import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
export declare const SPINNER_VALUE_ACCESSOR: any;
export declare class Spinner implements OnInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    onChange: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    min: number;
    max: number;
    maxlength: number;
    size: number;
    placeholder: string;
    inputId: string;
    disabled: boolean;
    readonly: boolean;
    tabindex: number;
    required: boolean;
    name: string;
    ariaLabelledBy: string;
    inputStyle: any;
    inputStyleClass: string;
    formatInput: boolean;
    decimalSeparator: string;
    thousandSeparator: string;
    precision: number;
    value: any;
    _step: number;
    formattedValue: string;
    onModelChange: Function;
    onModelTouched: Function;
    keyPattern: RegExp;
    timer: any;
    focus: boolean;
    filled: boolean;
    negativeSeparator: string;
    localeDecimalSeparator: string;
    localeThousandSeparator: string;
    thousandRegExp: RegExp;
    calculatedPrecision: number;
    inputfieldViewChild: ElementRef;
    get step(): number;
    set step(val: number);
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    ngOnInit(): void;
    repeat(event: Event, interval: number, dir: number): void;
    spin(event: Event, dir: number): void;
    getPrecision(): number;
    toFixed(value: number, precision: number): string;
    onUpButtonMousedown(event: Event): void;
    onUpButtonMouseup(event: Event): void;
    onUpButtonMouseleave(event: Event): void;
    onDownButtonMousedown(event: Event): void;
    onDownButtonMouseup(event: Event): void;
    onDownButtonMouseleave(event: Event): void;
    onInputKeydown(event: KeyboardEvent): void;
    onInputChange(event: Event): void;
    onInput(event: KeyboardEvent): void;
    onInputBlur(event: any): void;
    onInputFocus(event: any): void;
    parseValue(val: string): number;
    formatValue(): void;
    clearTimer(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    updateFilledState(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Spinner>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Spinner, "p-spinner", never, {
    "step": "step";
    "disabled": "disabled";
    "min": "min";
    "max": "max";
    "maxlength": "maxlength";
    "size": "size";
    "placeholder": "placeholder";
    "inputId": "inputId";
    "readonly": "readonly";
    "tabindex": "tabindex";
    "required": "required";
    "name": "name";
    "ariaLabelledBy": "ariaLabelledBy";
    "inputStyle": "inputStyle";
    "inputStyleClass": "inputStyleClass";
    "formatInput": "formatInput";
    "decimalSeparator": "decimalSeparator";
    "thousandSeparator": "thousandSeparator";
    "precision": "precision";
}, {
    "onChange": "onChange";
    "onFocus": "onFocus";
    "onBlur": "onBlur";
}, never>;
}
export declare class SpinnerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SpinnerModule, [typeof Spinner], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule], [typeof Spinner]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SpinnerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci5kLnRzIiwic291cmNlcyI6WyJzcGlubmVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1FQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFNQSU5ORVJfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwaW5uZXIgaW1wbGVtZW50cyBPbkluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uRm9jdXM6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQmx1cjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbWluOiBudW1iZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgbWF4bGVuZ3RoOiBudW1iZXI7XG4gICAgc2l6ZTogbnVtYmVyO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5OiBib29sZWFuO1xuICAgIHRhYmluZGV4OiBudW1iZXI7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGFyaWFMYWJlbGxlZEJ5OiBzdHJpbmc7XG4gICAgaW5wdXRTdHlsZTogYW55O1xuICAgIGlucHV0U3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGZvcm1hdElucHV0OiBib29sZWFuO1xuICAgIGRlY2ltYWxTZXBhcmF0b3I6IHN0cmluZztcbiAgICB0aG91c2FuZFNlcGFyYXRvcjogc3RyaW5nO1xuICAgIHByZWNpc2lvbjogbnVtYmVyO1xuICAgIHZhbHVlOiBhbnk7XG4gICAgX3N0ZXA6IG51bWJlcjtcbiAgICBmb3JtYXR0ZWRWYWx1ZTogc3RyaW5nO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBrZXlQYXR0ZXJuOiBSZWdFeHA7XG4gICAgdGltZXI6IGFueTtcbiAgICBmb2N1czogYm9vbGVhbjtcbiAgICBmaWxsZWQ6IGJvb2xlYW47XG4gICAgbmVnYXRpdmVTZXBhcmF0b3I6IHN0cmluZztcbiAgICBsb2NhbGVEZWNpbWFsU2VwYXJhdG9yOiBzdHJpbmc7XG4gICAgbG9jYWxlVGhvdXNhbmRTZXBhcmF0b3I6IHN0cmluZztcbiAgICB0aG91c2FuZFJlZ0V4cDogUmVnRXhwO1xuICAgIGNhbGN1bGF0ZWRQcmVjaXNpb246IG51bWJlcjtcbiAgICBpbnB1dGZpZWxkVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGdldCBzdGVwKCk6IG51bWJlcjtcbiAgICBzZXQgc3RlcCh2YWw6IG51bWJlcik7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICByZXBlYXQoZXZlbnQ6IEV2ZW50LCBpbnRlcnZhbDogbnVtYmVyLCBkaXI6IG51bWJlcik6IHZvaWQ7XG4gICAgc3BpbihldmVudDogRXZlbnQsIGRpcjogbnVtYmVyKTogdm9pZDtcbiAgICBnZXRQcmVjaXNpb24oKTogbnVtYmVyO1xuICAgIHRvRml4ZWQodmFsdWU6IG51bWJlciwgcHJlY2lzaW9uOiBudW1iZXIpOiBzdHJpbmc7XG4gICAgb25VcEJ1dHRvbk1vdXNlZG93bihldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uVXBCdXR0b25Nb3VzZXVwKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25VcEJ1dHRvbk1vdXNlbGVhdmUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkRvd25CdXR0b25Nb3VzZWRvd24oZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkRvd25CdXR0b25Nb3VzZXVwKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25Eb3duQnV0dG9uTW91c2VsZWF2ZShldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIG9uSW5wdXRLZXlkb3duKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcbiAgICBvbklucHV0Q2hhbmdlKGV2ZW50OiBFdmVudCk6IHZvaWQ7XG4gICAgb25JbnB1dChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgb25JbnB1dEJsdXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dEZvY3VzKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHBhcnNlVmFsdWUodmFsOiBzdHJpbmcpOiBudW1iZXI7XG4gICAgZm9ybWF0VmFsdWUoKTogdm9pZDtcbiAgICBjbGVhclRpbWVyKCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG4gICAgdXBkYXRlRmlsbGVkU3RhdGUoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwaW5uZXJNb2R1bGUge1xufVxuIl19